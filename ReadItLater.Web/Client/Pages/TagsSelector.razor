@using ReadItLater.Web.Client.Services

@if (Context.Type == StateType.Show)
{
    <div class="sub-menu">
        <Breadcrumbs FolderId="folderId" @ref="breadcrumbsComponent" />
        <div class="cf-items">
            <p class="cf-all @GetSelectedTagClassName()"
               @onclick="(e => TagChosen(null))">
                <span>All</span>
                <span class="fi-counter">@refsAllCount</span>
            </p>
            @if (tags != null)
            {
                @if (tags.Any())
                {
                    <div class="sorting @(tags.Length > 18 ? "huge-list" : "")">
                        <i class="fa fa-sort-alpha-asc @sortItems.SortByNameAscClassName" @onclick="sortItems.SortByNameDesc"></i>
                        <i class="fa fa-sort-alpha-desc @sortItems.SortByNameDescClassName" @onclick="sortItems.SortByNameAsc"></i>
                        <i class="fa fa-sort-numeric-asc @sortItems.SortByCountAscClassName" @onclick="sortItems.SortByCountDesc"></i>
                        <i class="fa fa-sort-numeric-desc @sortItems.SortByCountDescClassName" @onclick="sortItems.SortByCountAsc"></i>
                    </div>
                    <div class="cf-list @(tags.Length > 18 ? "huge-list" : "")">
                        @foreach (var item in tags)
                        {
                            <div class="item @GetSelectedTagClassName(item.Id)"
                                 @onclick="(e => TagChosen(item.Id))">
                                <span># @item.Name</span>
                                <span class="fi-counter">@item.RefsCount</span>
                            </div>
                        }
                    </div>
                }
            }
        </div>
    </div>
}